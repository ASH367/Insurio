{"ast":null,"code":"var _jsxFileName = \"/Users/ashishubale/Desktop/Projects/Insurio/insurio-app/src/Components/Middle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { ArrowUpIcon, Microphone, Paperclip } from \"@phosphor-icons/react\";\nimport Frame5 from \"../Images/Frame5.png\";\nimport axios from \"axios\";\nimport ReactMarkdown from 'react-markdown';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Middle = ({\n  formData\n}) => {\n  _s();\n  const [selected, setSelected] = useState(\"Search\");\n  const options = ['Search', 'Recommend', 'Cost Analysis'];\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [inputFocused, setInputFocused] = useState(false);\n  const [isGeneratingRecommendation, setIsGeneratingRecommendation] = useState(false);\n  const inputRef = useRef(null);\n  const fetchMarketplacePlans = async () => {\n    try {\n      const payload = {\n        income: 100000,\n        age: formData.age || 30,\n        gender: formData.gender || 'Prefer not to say',\n        uses_tobacco: formData.useOfTobaco === 'Daily user',\n        zipcode: formData.zip,\n        state: formData.state,\n        year: 2025,\n        countyfips: \"04013\"\n      };\n      const response = await axios.post(\"http://localhost:8000/marketplace-plans\", payload);\n      return response.data;\n    } catch (error) {\n      console.error(\"Marketplace API error:\", error);\n      throw error;\n    }\n  };\n  const generateAIRecommendation = async plansData => {\n    try {\n      const prompt = `Analyze these insurance plans and provide recommendations based on the following user profile:\n      Age: ${formData.age}\n      Gender: ${formData.gender}\n      Tobacco Use: ${formData.useOfTobaco}\n      Location: ${formData.state}, ${formData.zip}\n\n      Insurance Plans Data: ${JSON.stringify(plansData, null, 2)}\n      \n      Please provide a detailed comparison and recommendation using markdown formatting. Highlight the top 3 options.`;\n      const res = await axios.post(\"http://localhost:8000/chat-with-ai\", {\n        message: prompt,\n        context: [],\n        use_perplexity: true\n      });\n      return res.data.reply;\n    } catch (error) {\n      console.error(\"AI Recommendation error:\", error);\n      throw error;\n    }\n  };\n  const handleRecommendationClick = async () => {\n    setIsGeneratingRecommendation(true);\n    try {\n      // Add loading message to chat\n      setChatHistory(prev => [...prev, {\n        sender: \"user\",\n        text: \"Generate insurance recommendations\"\n      }, {\n        sender: \"bot\",\n        text: \"Analyzing available plans...\"\n      }]);\n\n      // Fetch marketplace data\n      const plansData = await fetchMarketplacePlans();\n\n      // Generate AI recommendation\n      const recommendation = await generateAIRecommendation(plansData);\n      const formattedRecommendation = /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: recommendation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 39\n      }, this);\n\n      // Update chat history\n      setChatHistory(prev => [...prev.slice(0, -1),\n      // Remove loading message\n      {\n        sender: \"bot\",\n        text: formattedRecommendation\n      }]);\n    } catch (error) {\n      setChatHistory(prev => [...prev.slice(0, -1), {\n        sender: \"bot\",\n        text: \"Failed to generate recommendations. Please try again later.\"\n      }]);\n    } finally {\n      setIsGeneratingRecommendation(false);\n    }\n  };\n  const handleOptionClick = option => {\n    setSelected(option);\n    if (option === \"Recommend\") {\n      handleRecommendationClick();\n    }\n  };\n\n  // Rest of your existing code (handleSend, UI components) remains similar\n  // Update the options mapping to use handleOptionClick\n\n  // In your options map:\n  {\n    options.map(label => {\n      const isSelected = selected === label;\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => handleOptionClick(label),\n        style: {\n          // ... existing styles\n          pointerEvents: isGeneratingRecommendation ? 'none' : 'auto',\n          opacity: isGeneratingRecommendation ? 0.7 : 1\n        },\n        children: label\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this);\n    });\n  }\n\n  // Add loading state for recommendations\n  {\n    isGeneratingRecommendation && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        color: '#A0A0A0',\n        marginTop: '20px'\n      },\n      children: \"Generating personalized recommendations...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, this);\n  }\n};\n_s(Middle, \"1nkWfvGxkIiKi8ueridvTTwRLIc=\");\n_c = Middle;\nexport default Middle;\nvar _c;\n$RefreshReg$(_c, \"Middle\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ArrowUpIcon","Microphone","Paperclip","Frame5","axios","ReactMarkdown","AnimatePresence","motion","jsxDEV","_jsxDEV","Middle","formData","_s","selected","setSelected","options","message","setMessage","loading","setLoading","response","setResponse","chatHistory","setChatHistory","inputFocused","setInputFocused","isGeneratingRecommendation","setIsGeneratingRecommendation","inputRef","fetchMarketplacePlans","payload","income","age","gender","uses_tobacco","useOfTobaco","zipcode","zip","state","year","countyfips","post","data","error","console","generateAIRecommendation","plansData","prompt","JSON","stringify","res","context","use_perplexity","reply","handleRecommendationClick","prev","sender","text","recommendation","formattedRecommendation","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","handleOptionClick","option","map","label","isSelected","onClick","style","pointerEvents","opacity","textAlign","color","marginTop","_c","$RefreshReg$"],"sources":["/Users/ashishubale/Desktop/Projects/Insurio/insurio-app/src/Components/Middle.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { ArrowUpIcon, Microphone, Paperclip } from \"@phosphor-icons/react\";\nimport Frame5 from \"../Images/Frame5.png\";\nimport axios from \"axios\";\nimport ReactMarkdown from 'react-markdown';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst Middle = ({ formData }) => {\n  const [selected, setSelected] = useState(\"Search\");\n  const options = ['Search', 'Recommend', 'Cost Analysis'];\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const [inputFocused, setInputFocused] = useState(false);\n  const [isGeneratingRecommendation, setIsGeneratingRecommendation] = useState(false);\n  \n  const inputRef = useRef(null);\n\n  const fetchMarketplacePlans = async () => {\n    try {\n      const payload = {\n        income: 100000,\n        age: formData.age || 30,\n        gender: formData.gender || 'Prefer not to say',\n        uses_tobacco: formData.useOfTobaco === 'Daily user',\n        zipcode: formData.zip,\n        state: formData.state,\n        year: 2025,\n        countyfips: \"04013\"\n      };\n\n      const response = await axios.post(\n        \"http://localhost:8000/marketplace-plans\",\n        payload\n      );\n      return response.data;\n    } catch (error) {\n      console.error(\"Marketplace API error:\", error);\n      throw error;\n    }\n  };\n\n  const generateAIRecommendation = async (plansData) => {\n    try {\n      const prompt = `Analyze these insurance plans and provide recommendations based on the following user profile:\n      Age: ${formData.age}\n      Gender: ${formData.gender}\n      Tobacco Use: ${formData.useOfTobaco}\n      Location: ${formData.state}, ${formData.zip}\n\n      Insurance Plans Data: ${JSON.stringify(plansData, null, 2)}\n      \n      Please provide a detailed comparison and recommendation using markdown formatting. Highlight the top 3 options.`;\n\n      const res = await axios.post(\"http://localhost:8000/chat-with-ai\", {\n        message: prompt,\n        context: [],\n        use_perplexity: true\n      });\n\n      return res.data.reply;\n    } catch (error) {\n      console.error(\"AI Recommendation error:\", error);\n      throw error;\n    }\n  };\n\n  const handleRecommendationClick = async () => {\n    setIsGeneratingRecommendation(true);\n    try {\n      // Add loading message to chat\n      setChatHistory(prev => [...prev, \n        { sender: \"user\", text: \"Generate insurance recommendations\" },\n        { sender: \"bot\", text: \"Analyzing available plans...\" }\n      ]);\n\n      // Fetch marketplace data\n      const plansData = await fetchMarketplacePlans();\n      \n      // Generate AI recommendation\n      const recommendation = await generateAIRecommendation(plansData);\n      const formattedRecommendation = <ReactMarkdown>{recommendation}</ReactMarkdown>;\n\n      // Update chat history\n      setChatHistory(prev => [\n        ...prev.slice(0, -1), // Remove loading message\n        { sender: \"bot\", text: formattedRecommendation }\n      ]);\n      \n    } catch (error) {\n      setChatHistory(prev => [\n        ...prev.slice(0, -1),\n        { sender: \"bot\", text: \"Failed to generate recommendations. Please try again later.\" }\n      ]);\n    } finally {\n      setIsGeneratingRecommendation(false);\n    }\n  };\n\n  const handleOptionClick = (option) => {\n    setSelected(option);\n    if (option === \"Recommend\") {\n      handleRecommendationClick();\n    }\n  };\n\n  // Rest of your existing code (handleSend, UI components) remains similar\n  // Update the options mapping to use handleOptionClick\n\n  // In your options map:\n  {options.map((label) => {\n    const isSelected = selected === label;\n    return (\n      <p\n        key={label}\n        onClick={() => handleOptionClick(label)}\n        style={{\n          // ... existing styles\n          pointerEvents: isGeneratingRecommendation ? 'none' : 'auto',\n          opacity: isGeneratingRecommendation ? 0.7 : 1\n        }}\n      >\n        {label}\n      </p>\n    );\n  })}\n\n  // Add loading state for recommendations\n  {isGeneratingRecommendation && (\n    <div style={{ textAlign: 'center', color: '#A0A0A0', marginTop: '20px' }}>\n      Generating personalized recommendations...\n    </div>\n  )}\n};\n\nexport default Middle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}