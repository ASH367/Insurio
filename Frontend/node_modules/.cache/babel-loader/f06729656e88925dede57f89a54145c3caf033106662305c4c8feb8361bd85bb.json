{"ast":null,"code":"// session.js\n\nexport function createNewSessionId() {\n  const newSessionId = Date.now().toString(36) + Math.random().toString(36).substring(2, 8);\n  const expiresAt = Date.now() + 24 * 60 * 60 * 1000; // 24 hours\n  localStorage.setItem(\"session-id\", newSessionId);\n  localStorage.setItem(\"session-expiry\", expiresAt.toString());\n  return newSessionId;\n}\nfunction isSessionExpired() {\n  const expiry = parseInt(localStorage.getItem(\"session-expiry\"), 10);\n  return !expiry || Date.now() > expiry;\n}\nexport function getSessionId() {\n  return localStorage.getItem(\"session-id\");\n}\nexport function getOrCreateSessionId(forceNew = false) {\n  if (forceNew || isSessionExpired()) {\n    return createNewSessionId();\n  }\n  let sessionId = getSessionId();\n  if (!sessionId) {\n    sessionId = createNewSessionId();\n  }\n  return sessionId;\n}\nexport function resetSessionId() {\n  localStorage.removeItem(\"session-id\");\n  localStorage.removeItem(\"session-expiry\");\n}","map":{"version":3,"names":["createNewSessionId","newSessionId","Date","now","toString","Math","random","substring","expiresAt","localStorage","setItem","isSessionExpired","expiry","parseInt","getItem","getSessionId","getOrCreateSessionId","forceNew","sessionId","resetSessionId","removeItem"],"sources":["/Users/ashishubale/Desktop/Projects/Insurio/insurio-app/src/utils/session.js"],"sourcesContent":["// session.js\n  \n  export function createNewSessionId() {\n    const newSessionId =\n      Date.now().toString(36) + Math.random().toString(36).substring(2, 8);\n    const expiresAt = Date.now() + 24 * 60 * 60 * 1000; // 24 hours\n    localStorage.setItem(\"session-id\", newSessionId);\n    localStorage.setItem(\"session-expiry\", expiresAt.toString());\n    return newSessionId;\n  }\n\n  function isSessionExpired() {\n    const expiry = parseInt(localStorage.getItem(\"session-expiry\"), 10);\n    return !expiry || Date.now() > expiry;\n  }\n  \n  export function getSessionId() {\n    return localStorage.getItem(\"session-id\");\n  }\n  \n  export function getOrCreateSessionId(forceNew = false) {\n    if (forceNew || isSessionExpired()) {\n    return createNewSessionId();\n  }\n  \n    let sessionId = getSessionId();\n    if (!sessionId) {\n      sessionId = createNewSessionId();\n    }\n    return sessionId;\n  }\n  \n  export function resetSessionId() {\n    localStorage.removeItem(\"session-id\");\n    localStorage.removeItem(\"session-expiry\");\n  }\n  "],"mappings":"AAAA;;AAEE,OAAO,SAASA,kBAAkBA,CAAA,EAAG;EACnC,MAAMC,YAAY,GAChBC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACF,QAAQ,CAAC,EAAE,CAAC,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EACtE,MAAMC,SAAS,GAAGN,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;EACpDM,YAAY,CAACC,OAAO,CAAC,YAAY,EAAET,YAAY,CAAC;EAChDQ,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEF,SAAS,CAACJ,QAAQ,CAAC,CAAC,CAAC;EAC5D,OAAOH,YAAY;AACrB;AAEA,SAASU,gBAAgBA,CAAA,EAAG;EAC1B,MAAMC,MAAM,GAAGC,QAAQ,CAACJ,YAAY,CAACK,OAAO,CAAC,gBAAgB,CAAC,EAAE,EAAE,CAAC;EACnE,OAAO,CAACF,MAAM,IAAIV,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGS,MAAM;AACvC;AAEA,OAAO,SAASG,YAAYA,CAAA,EAAG;EAC7B,OAAON,YAAY,CAACK,OAAO,CAAC,YAAY,CAAC;AAC3C;AAEA,OAAO,SAASE,oBAAoBA,CAACC,QAAQ,GAAG,KAAK,EAAE;EACrD,IAAIA,QAAQ,IAAIN,gBAAgB,CAAC,CAAC,EAAE;IACpC,OAAOX,kBAAkB,CAAC,CAAC;EAC7B;EAEE,IAAIkB,SAAS,GAAGH,YAAY,CAAC,CAAC;EAC9B,IAAI,CAACG,SAAS,EAAE;IACdA,SAAS,GAAGlB,kBAAkB,CAAC,CAAC;EAClC;EACA,OAAOkB,SAAS;AAClB;AAEA,OAAO,SAASC,cAAcA,CAAA,EAAG;EAC/BV,YAAY,CAACW,UAAU,CAAC,YAAY,CAAC;EACrCX,YAAY,CAACW,UAAU,CAAC,gBAAgB,CAAC;AAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}